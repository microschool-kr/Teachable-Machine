        "import cv2\n",
        "from keras.models import load_model\n",
        "from PIL import Image, ImageOps\n",
        "import numpy as np\n",
        "\n",
        "# Set WebCam\n",
        "frameWidth = 640\n",
        "frameHeight = 480\n",
        "cap = cv2.VideoCapture(0)\n",
        "cap.set(3, frameWidth) # Width\n",
        "cap.set(4, frameHeight) # Height\n",
        "cap.set(10, 150) # Brightness\n",
        "\n",
        "# Load the model\n",
        "model = load_model('keras_model.h5')\n",
        "\n",
        "while True:\n",
        "  # take picture\n",
        "  success, img = cap.read()\n",
        "  cv2.imshow(\"\", img)\n",
        "  \n",
        "  # data preprocessing\n",
        "  data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)\n",
        "  size = (224, 224)\n",
        "  \n",
        "  # OpenCV to PIL image\n",
        "  # convert from BGR to RGB & from openCV2 to PIL\n",
        "  img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n",
        "  img=Image.fromarray(img)\n",
        "  \n",
        "  # PIL image processiing\n",
        "  image = ImageOps.fit(img, size, Image.ANTIALIAS)\n",
        "  image_array = np.asarray(image)\n",
        "  normalized_image_array = (image_array.astype(np.float32) / 127.) - 1\n",
        "  data[0] = normalized_image_array\n",
        "  \n",
        "  # predicting\n",
        "  prediction = model.predict(data)\n",
        "  print(\"Pen\", prediction[0,0])\n",
        "  print(\"Key\", prediction[0,1])\n",
        "  print(\"Vaseline\", prediction[0,2])\n",
        "  \n",
        "  # expiration\n",
        "  if cv2.waitKey(1) & 0xFF == ord('q'):\n",
        "      break\n",
        "\n",
        "cap.release()\n",
        "cv2.destroyAllWindows()"
